[build-system]
requires = ["setuptools>=64.0.1", "setuptools-scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[tool.setuptools.dynamic]
version = {attr = "arpes.__version__"}

[project]
name = "arpes"
dynamic = ["version"]
authors = [
    {name = "Conrad Stansbury", email = "chstan@berkeley.edu"},
]
description = "Modular data analysis code for angle resolved photoemission spectroscopy (ARPES)"
readme = "README.rst"
license = { file = "LICENSE" }
requires-python = ">=3.8.0,<3.13"
classifiers = [
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "PyQt5>5.15",
    "ase>=3.17.0",
    "astropy",
    "bokeh>=2.0.0",
    "colorama",
    "colorcet",
    "dill",
    "h5py>=3.2.1",
    "imageio",
    "ipywidgets>8.0.0",
    "lmfit>=1.0.0",
    "matplotlib>=3.0.3",
    "netCDF4>=1.5.0,<1.7.0; python_version<'3.9'",
    "netCDF4>=1.5.0; python_version>='3.9'",
    "numba>=0.53.0",
    "numpy>=1.20.0,<2.0.0",
    "packaging",
    "pandas",
    "pint",
    "pyqtgraph>=0.12.0",
    "rx",
    "scipy>=1.6.0",
    "titlecase",
    "tqdm",
    "xarray>=0.16.1",
]

[project.urls]
Homepage = "https://gitlab.com/lanzara-group/python-arpes"

[project.optional-dependencies]
igor = [
    "igor @ git+https://github.com/chstan/igorpy.git",
]
ml= [
    "scikit-learn>=0.24.0",
    "scikit-image",
    "cvxpy",
]
jupyter = [
        "jupyter",
        "ipython",
        "jupyter_contrib_nbextensions",
        "notebook>=5.7.0",
]

dev = [
    "markdown-include",
    "attrs>=17.4.0",
    "pluggy>=0.6.0",
    "py>=1.5.2",
    "pytest>=3.3.2",
    "pytest-qt>=4.0.0",
    "pre-commit>=3.0.0",
]

docs = [
    "sphinx",
    "sphinxcontrib-restbuilder",
    "nbsphinx",
    "sphinx_rtd_theme",
    "sphinx_copybutton",
]

[tool.setuptools.packages.find]
where = [
    "src",
]

[tool.setuptools.package-data]
arpes = ["resources"]

[tool.ruff]
include = ["src/*.py", "tests/*.py"]
lint.select = [
    "E", # pycodestyle
    "W", # pycodestyle
    "PL", # pylint
    "F841", # unused variable
    "F401", # unused imports
    "ARG", # unused arguments
]
lint.ignore = [
    "E701", # Multiple statements on one line (colon)
    "PLR0911", # Too many return statements
    "PLR0912", # Too many branches
    "PLR0913", # Too many arguments in function definition
    "PLR0915", # Too many statements
    "PLR2004", # Magic value used instead of constant
    "PLR5501", # else-if-used
    "PLW2901", # redefined-loop-name
]
lint.fixable = ["ALL"]
line-length = 100 # change the default line length number or characters.

[tool.pydocstyle]
convention = "google"

[tool.coverage.run]
include = ["arpes"]
omit = [
  "tests/*",
  "arpes/plotting/*",
  "arpes/deep_learning/*",
  "arpes/widgets.py",
]

[tool.coverage.report]
exclude_lines = [
  "raise NotImplementedError",
  "pragma: no cover",
]

